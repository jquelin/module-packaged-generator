#!/usr/bin/perl

use 5.010;
use strict;
use warnings;

package pkgcpan;
# ABSTRACT: create db of available Perl modules

use File::Spec::Functions qw{ catdir updir };
use Getopt::Long::Descriptive;
use Moose;

# for dev purposes
use FindBin qw{ $Bin };
use lib catdir( $Bin, updir, 'lib' );

use Module::Packaged::Generator;
use Module::Packaged::Generator::Logger;

with 'Module::Packaged::Generator::Role::Loggable';


# -- parse command-line options

my ($opt, $usage) = describe_options(
    '%c %o',
    [ 'file|f=s'  => "path to the database file"       ],
    [],
    [ 'quiet|q'   => "don't print anything but errors" ],
    [ 'verbose|v' => "print debug messages"            ],
    [ 'help|h'    => "print usage message and exit"    ],
);
print($usage->text), exit if $opt->help;


# -- create logger

my $self = pkgcpan->new;
$self->set_debug( $opt->verbose );
$self->set_muted( $opt->quiet );


# -- main program

# try to find a suitable driver
my $dist = Module::Packaged::Generator->find_dist;
$self->log( "linux distribution: $dist" );
my $driver = Module::Packaged::Generator->find_driver;
$self->log( "distribution driver: $driver" );

# create the database
my $file = $opt->file ? $opt->file : "cpan_$dist.db";
my $dbh  = Module::Packaged::Generator->create_db($file);
$dbh->{AutoCommit} = 0;
$dbh->{RaiseError} = 1;


# fetch the list of available perl modules
$self->log( "fetching list of available perl modules" );
my @modules = $driver->new->list;
$self->log( "found " . scalar(@modules) . " perl modules" );


# insert the modules in the database
my $sth = $dbh->prepare("
    INSERT
        INTO   module (module, version, dist, pkgname)
        VALUES        (?,?,?,?);
");
my $prefix = "inserting modules in db";
my $progress = $self->progress_bar( {
    count     => scalar(@modules),
    bar_width => 50,
    remove    => 1,
    name      => $prefix,
} );
$progress->minor(0);  # we're so fast now that we don't need minor scale
my $next_update = 0;
foreach my $i ( 0 .. $#modules ) {
    my $m = $modules[$i];
    $sth->execute($m->name, $m->version, $m->dist, $m->pkgname);
    $next_update = $progress->update($_)
        if $i >= $next_update;
}
$progress->update( scalar(@modules) );
$sth->finish;
$self->log( "${prefix}: done" );


# create indexes in the db to make it faster
$self->log( "creating indexes:" );
$self->log( "  - modules " );
$dbh->do("CREATE INDEX module__module  on module ( module  );");
$self->log( "  - dists " );
$dbh->do("CREATE INDEX module__dist    on module ( dist    );");
$self->log( "  - packages " );
$dbh->do("CREATE INDEX module__pkgname on module ( pkgname );");


# all's done, close the db
$dbh->commit;
$dbh->disconnect;
$self->log( "database created" );

exit;
__END__

=head1 SYNOPSIS

    $ pkgcpan


=head1 DESCRIPTION

This script will create and populate a sqlite database with the
available Perl modules for your distribution.

